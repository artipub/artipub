import{_ as t,c as e,o as a,a2 as i}from"./chunks/framework.ISoJx0qo.js";const b=JSON.parse('{"title":"What is Artipub?","description":"","frontmatter":{},"headers":[],"relativePath":"guide/what-is-artipub.md","filePath":"guide/what-is-artipub.md"}'),o={name:"guide/what-is-artipub.md"},r=i('<h1 id="what-is-artipub" tabindex="-1">What is Artipub? <a class="header-anchor" href="#what-is-artipub" aria-label="Permalink to &quot;What is Artipub?&quot;">​</a></h1><p>ArtiPub (article release assistant) is a tool library aimed at simplifying content creators to publish the article process.It provides a simple API that allows you to easily publish the article to any platforms, such as blogs, social media, etc., without manual operation of each platform.</p><div class="tip custom-block" style="padding-top:8px;"> Just want to try it out? Skip to the [Quickstart](./getting-started). </div><h2 id="❓-why-do-you-need-artipub" tabindex="-1">❓ Why do you need Artipub? <a class="header-anchor" href="#❓-why-do-you-need-artipub" aria-label="Permalink to &quot;❓ Why do you need Artipub?&quot;">​</a></h2><ol><li>Local pictures cited in Markdown need to manually compress the picture, then upload to the bed, and finally replace the picture link</li><li>After Markdown finished writing, I want to publish it to other platforms to avoid manual Copy</li><li>After Markdown finished writing the article, I need to modify some of the contents of Markdown and let it regenerate the content of Markdown</li><li>...</li></ol><blockquote><p>Note: ArtiPub will help you solve these problems automatically, and will expand more in the future</p></blockquote><h2 id="✨-features" tabindex="-1">✨ Features <a class="header-anchor" href="#✨-features" aria-label="Permalink to &quot;✨ Features&quot;">​</a></h2><ul><li>🌐 <strong>Multi-platform release</strong>: Support that the Markdown article is published to multiple mainstream content platforms, including but not limited to Notion, Medium, Dev.to, etc.</li><li>✨ <strong>Simple and easy to use</strong>: Provide a simple API, and only need a few lines of code to implement the article release.</li><li>🔌 <strong>Support middleware and plugin</strong>: Through plug -in and middle parts, let users make more fine -grained control processing and release processes.</li><li>📖 <strong>Complete open source</strong>: Encourage community contributions and continue to increase new platform support and functions.</li></ul><h2 id="🔧-built-in" tabindex="-1">🔧 Built-in <a class="header-anchor" href="#🔧-built-in" aria-label="Permalink to &quot;🔧 Built-in&quot;">​</a></h2><h3 id="treatment-middleware" tabindex="-1">Treatment middleware <a class="header-anchor" href="#treatment-middleware" aria-label="Permalink to &quot;Treatment middleware&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Support</th><th>Description</th></tr></thead><tbody><tr><td>piccompress</td><td>√</td><td>Automatic compression of the picture</td></tr><tr><td>Picupload</td><td>√</td><td>Picture Upload</td></tr></tbody></table><h3 id="publish-plug-in" tabindex="-1">Publish plug -in <a class="header-anchor" href="#publish-plug-in" aria-label="Permalink to &quot;Publish plug -in&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Support</th><th>Description</th></tr></thead><tbody><tr><td>NOTIONPUBLISHERPLUGIN</td><td>√</td><td>Published to NOTION</td></tr><tr><td>DEVTOPUBLISHERPLUGIN</td><td>√</td><td>Published to DEV.TO</td></tr><tr><td>NativePublisherPlugin</td><td>√</td><td>Published to native</td></tr></tbody></table>',13),l=[r];function d(n,s,u,h,p,c){return a(),e("div",null,l)}const f=t(o,[["render",d]]);export{b as __pageData,f as default};
